[[inputs.tail]]
  files = ["/tmp/test_eve.json"]
  from_beginning = true
  data_format = "json"
  json_name_key = "event_type"
  json_time_key = "timestamp"
  json_time_format = "2006-01-02T15:04:05.000000-0700"
  tag_keys = ["event_type"]

[[processors.starlark]]
  source = '''
def apply(metric):
    # Only transform stats events into new metrics; drop the original metric
    if metric.tags.get("event_type") != "stats":
        return []

    stats = metric.fields.get("stats")
    if not stats:
        return []

    new_metrics = []
    flow = stats.get("flow", {})
    if flow:
        new_metrics.append({"name": "suricata_flow_total", "fields": {"value": flow.get("total", 0)}, "tags": {}})
    # also emit uptime
    new_metrics.append({"name": "suricata_uptime_seconds", "fields": {"value": stats.get("uptime", 0)}, "tags": {}})
    return new_metrics
'''

[[outputs.file]]
  files = ["/tmp/telegraf_out.txt"]
  data_format = "influx"
